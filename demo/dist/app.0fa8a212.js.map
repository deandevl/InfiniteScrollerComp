{"version":3,"sources":["node_modules/infinitescrollercomp/InfiniteScrollerComp.vue","src/PersonComp.vue","src/App.vue","src/app.js"],"names":["Vue","render","h","App","$mount"],"mappings":";AAOA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACA,KAAA,uBACA,KAAA,KACA,CACA,WAAA,SAGA,MAAA,CACA,cAAA,CACA,KAAA,OACA,QAAA,OAGA,QAAA,CACA,aAAA,GACA,MAAA,EAAA,EAAA,OAAA,aAAA,EAAA,OAAA,YAAA,EAAA,OAAA,aAGA,GACA,KAAA,MAAA,iBAAA,KAIA,UACA,GAAA,OAAA,KAAA,cACA,IAAA,IAAA,KAAA,OAAA,KAAA,KAAA,eACA,KAAA,IAAA,MAAA,iBAAA,IAAA,KAAA,cAAA,MA1BA,QAAA,QAAA;;;ACmBA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACA,KAAA,aACA,MAAA,CACA,eAAA,CACA,KAAA,OACA,QAAA,MAEA,WAAA,CACA,KAAA,OACA,QAAA,MAEA,UAAA,CACA,KAAA,OACA,QAAA,MAEA,WAAA,CACA,KAAA,OACA,QAAA,MAEA,IAAA,CACA,KAAA,OACA,QAAA,MAEA,cAAA,CACA,KAAA,OACA,QAAA,MAEA,eAAA,CACA,KAAA,OACA,QAAA,QA7BA,QAAA,QAAA;;;ACAA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAHA,IAAA,EAAA,EAAA,QAAA,yBACA,EAAA,EAAA,QAAA,qBAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,IAAA,EAAA,CACA,KAAA,MACA,KAAA,WACA,MAAA,CACA,IAAA,6BACA,QAAA,KACA,cAAA,CACA,gBAAA,WAIA,WAAA,CACA,WAAA,EADA,QAEA,qBAAA,EAAA,SAEA,QAAA,CACA,WAAA,SAAA,GAAA,IAAA,EAAA,KACA,GAAA,EAAA,CAKA,MAAA,KAAA,IAJA,CACA,OAAA,MACA,KAAA,SAEA,KAAA,SAAA,GACA,GAAA,EAAA,GACA,OAAA,EAAA,OAEA,MAAA,IAAA,MAAA,EAAA,cACA,KAAA,SAAA,GACA,IAAA,EAAA,KAAA,MAAA,GACA,EAAA,QAAA,KAAA,EAAA,QAAA,MACA,MAAA,SAAA,GACA,QAAA,IAAA,EAAA,cAKA,QAAA,WAAA,IAAA,EAAA,KACA,KAAA,QAAA,GACA,IAKA,IAJA,IAAA,EAAA,CACA,OAAA,MACA,KAAA,QAEA,EAAA,EAAA,EAAA,EAAA,IACA,MAAA,KAAA,IAAA,GAAA,KAAA,SAAA,GACA,GAAA,EAAA,GACA,OAAA,EAAA,OAEA,MAAA,IAAA,MAAA,EAAA,cACA,KAAA,SAAA,GACA,IAAA,EAAA,KAAA,MAAA,GACA,EAAA,QAAA,KAAA,EAAA,QAAA,MAGA,MAAA,GACA,QAAA,IAAA,EAAA,YAvDA,QAAA,QAAA;;;ACtBA,aAFA,IAAA,EAAA,EAAA,QAAA,cAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,IAAIA,IAAI,CACPC,OAAQ,SAAAC,GAAKA,OAAAA,EAAEC,EAAD,YACZC,OAAO","file":"app.0fa8a212.js","sourceRoot":"..","sourcesContent":["<template>\r\n  <div class=\"scrollerComp\" v-on:scroll=\"check_bottom($event)\">\r\n    <slot name=\"content\">Default Content</slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'InfiniteScrollerComp',\r\n    data(){\r\n      return {\r\n        first_name: 'Jane'\r\n      }\r\n    },\r\n    props: {\r\n      css_variables: {\r\n        type: Object,\r\n        default: null\r\n      }\r\n    },\r\n    methods: {\r\n      check_bottom(evt){\r\n        const at_bottom = evt.target.scrollHeight - evt.target.scrollTop === evt.target.clientHeight;\r\n        //debug\r\n        //console.log(`Scroll Height: ${evt.target.scrollHeight} Scroll Top: ${evt.target.scrollTop} At Bottom: ${at_bottom}`);\r\n        if(at_bottom){\r\n          this.$emit('reached_bottom',at_bottom);\r\n        }\r\n      }\r\n    },\r\n    mounted(){\r\n      if(this.css_variables !== null){\r\n        for(let key of Object.keys(this.css_variables)){\r\n          this.$el.style.setProperty(`--${key}`, this.css_variables[key]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  :root {\r\n    --scroller_height: 30rem;\r\n  }\r\n  .scrollerComp {\r\n    height: var(--scroller_height);\r\n    overflow-y: auto;\r\n  }\r\n  .scrollerComp::-webkit-scrollbar-track {\r\n    background-color: #F5F5F5;\r\n    border-radius: 10px;\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n  }\r\n  .scrollerComp::-webkit-scrollbar {\r\n    background-color: transparent;\r\n    width: 12px;\r\n    height: 12px;\r\n  }\r\n  .scrollerComp::-webkit-scrollbar-thumb {\r\n    background-color: #D62929;\r\n    border-radius: 10px;\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n  }\r\n</style>","<template>\r\n  <div class=\"personComp\">\r\n    <img class=\"personComp_img\" v-if=\"img_source_url\" :src=\"img_source_url\">\r\n    <div class=\"personComp_info\">\r\n\r\n      <div class=\"personComp_name\">\r\n        <span v-if=\"first_name\">{{first_name}}</span>\r\n        <span v-if=\"last_name\">{{last_name}}</span>\r\n      </div>\r\n\r\n      <div class=\"personComp_birth\">\r\n        <strong>Birth date-age: </strong>\r\n        <span v-if=\"birth_date\">{{birth_date}}</span>\r\n        <span v-if=\"age\">{{age}}</span>\r\n      </div>\r\n\r\n      <div class=\"personComp_location\">\r\n        <strong>Location City-State: </strong>\r\n        <span v-if=\"location_city\">{{location_city}}</span>\r\n        <span v-if=\"location_state\">{{location_state}}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'PersonComp',\r\n    props: {\r\n      img_source_url: {\r\n        type: String,\r\n        default: null\r\n      },\r\n      first_name: {\r\n        type: String,\r\n        default: null\r\n      },\r\n      last_name: {\r\n        type: String,\r\n        default: null\r\n      },\r\n      birth_date: {\r\n        type: String,\r\n        default: null\r\n      },\r\n      age: {\r\n        type: Number,\r\n        default: null\r\n      },\r\n      location_city: {\r\n        type: String,\r\n        default: null\r\n      },\r\n      location_state: {\r\n        type: String,\r\n        default: null\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .personComp {\r\n    display: flex;\r\n    flex-direction: row;\r\n    border: 1px solid blue;\r\n    border-radius: 5px;\r\n    padding: 15px;\r\n    margin-bottom: 20px;\r\n    font-family: Verdana, sans-serif;\r\n  }\r\n  .personComp_img {\r\n    height: auto;\r\n    border-radius: 5px;\r\n  }\r\n  .personComp_info {\r\n    margin-left: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n  }\r\n  .personComp_name {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    width: 200px;\r\n    overflow: hidden;\r\n    font-size: 18px;\r\n    font-weight: 900;\r\n    text-transform: capitalize;\r\n  }\r\n  .personComp_birth {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    width: 400px;\r\n    overflow: hidden;\r\n  }\r\n  .personComp_location {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    width: 500px;\r\n    overflow: hidden;\r\n  }\r\n</style>","<template>\r\n  <div class='demo_container'>\r\n    <infinite-scroller-comp\r\n        v-on:reached_bottom=\"add_person\"\r\n        :css_variables=\"css_variables\">\r\n      <div slot=\"content\">\r\n        <person-comp\r\n            v-for=\"(person,index) in persons\"\r\n            :key=\"index\"\r\n            :img_source_url=\"person.picture.large\"\r\n            :first_name=\"person.name.first\"\r\n            :last_name=\"person.name.last\"\r\n            :birth_date=\"person.dob.date\"\r\n            :age=\"person.dob.age\"\r\n            :location_city=\"person.location.city\"\r\n            :location_state=\"person.location.state\">\r\n        </person-comp>\r\n      </div>\r\n    </infinite-scroller-comp>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import InfiniteScrollerComp from 'infinitescrollercomp';\r\n  import PersonComp from './PersonComp.vue';\r\n\r\n  export default {\r\n    name: 'App',\r\n    data: function() {\r\n      return {\r\n        url: 'https://randomuser.me/api/',\r\n        persons: null,\r\n        css_variables: {\r\n          scroller_height: '35rem'\r\n        }\r\n      };\r\n    },\r\n    components: {\r\n      PersonComp,\r\n      InfiniteScrollerComp\r\n    },\r\n    methods: {\r\n      add_person(at_bottom){\r\n        if(at_bottom){\r\n          const config = {\r\n            method: 'GET',\r\n            mode: 'cors'\r\n          };\r\n          fetch(this.url,config).then((response) =>{\r\n            if(response.ok){\r\n              return response.text();\r\n            }\r\n            throw new Error(response.statusText);\r\n          }).then((resp_str) => {\r\n            const person_obj = JSON.parse(resp_str);\r\n            this.persons.push(person_obj.results[0]);\r\n          }).catch((error) => {\r\n            console.log(error.message);\r\n          });\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n      this.persons = [];\r\n      try {\r\n        const config = {\r\n          method: 'GET',\r\n          mode: 'cors'\r\n        };\r\n        for(let i = 0; i < 5; i++){\r\n          fetch(this.url,config).then(response => {\r\n            if(response.ok){\r\n              return response.text();\r\n            }\r\n            throw new Error(response.statusText);\r\n          }).then(resp_str => {\r\n            const person_obj = JSON.parse(resp_str);\r\n            this.persons.push(person_obj.results[0]);\r\n          });\r\n        }\r\n      }catch(error){\r\n        console.log(error.message);\r\n      }\r\n    }\r\n  }\r\n</script>","//Note: For this demo we are referencing Vue, via its CDN. See index.html.\r\n//import Vue from 'vue';\r\nimport App from './App.vue';\r\n\r\nnew Vue({\r\n\trender: h => h(App)\r\n}).$mount('#app');\r\n"]}